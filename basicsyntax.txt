TOKENS IN GO
A Go program consists of various tokens. A token is either a keyword,
an identifier, a constant, a string literal, or a symbol.
For example, the following Go statement consists of six tokens −
`fmt.Println("Hello, World!")`

```
fmt
.
Println
(
   "Hello, World!"
)
```

LINE SEPERATOR
In Go, a line seperator ends a statement. Unlike in C, we do not need
a special seperator ';'. This is because the compiler internally places “;”
as the statement terminator to indicate the end of one logical entity.

COMMENTS
Comments in Go starts with '/*' and ends with '*/'
e.g
/* my first program in Go */

IDENTIFIERS
A Go identifier is a name used to identify a variable, function, or any other user-defined item.
An identifier starts with a letter A to Z or a to z or an underscore _ followed by zero or more letters,
underscores, and digits (0 to 9).
Go does not allow punctuation characters such as @, $, and % within identifiers.
Go is a case-sensitive programming language.
Thus, Manpower and manpower are two different identifiers in Go.

KEYWORDS IN GO
break       default	    func	interface	select
case	    defer	    Go	    map	        Struct
chan	    else	    Goto	package	    Switch
const	    fallthrough	if	    range	    Type
continue    for	import	return	Var